function drawScene(t,e,i,r){t.clearColor(0,0,0,0),t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT);const o=45*Math.PI/180,n=t.canvas.clientWidth/t.canvas.clientHeight,a=.1,c=100,s=mat4.create();mat4.perspective(s,o,n,a,c);const b=mat4.create();mat4.translate(b,b,[-0,0,-10]),mat4.multiply(b,b,r),setPositionAttribute(t,i,e),setBaricentricCoordinatesAttribute(t,i,e),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i.indices),t.useProgram(e.program),t.uniformMatrix4fv(e.uniformLocations.projectionMatrix,!1,s),t.uniformMatrix4fv(e.uniformLocations.modelViewMatrix,!1,b);{const e=i.indices.length,r=t.UNSIGNED_SHORT,o=0;t.drawElements(t.TRIANGLES,e,r,o)}}function setPositionAttribute(t,e,i){const r=3,o=t.FLOAT,n=!1,a=0,c=0;t.bindBuffer(t.ARRAY_BUFFER,e.position),t.vertexAttribPointer(i.attribLocations.vertexPosition,r,o,n,a,c),t.enableVertexAttribArray(i.attribLocations.vertexPosition)}function setColorAttribute(t,e,i){const r=4,o=t.FLOAT,n=!1,a=0,c=0;t.bindBuffer(t.ARRAY_BUFFER,e.color),t.vertexAttribPointer(i.attribLocations.vertexColor,r,o,n,a,c),t.enableVertexAttribArray(i.attribLocations.vertexColor)}function setBaricentricCoordinatesAttribute(t,e,i){const r=3,o=t.FLOAT,n=!1,a=0,c=0;t.bindBuffer(t.ARRAY_BUFFER,e.baricentricCoordinates),t.vertexAttribPointer(i.attribLocations.baricentricPosition,r,o,n,a,c),t.enableVertexAttribArray(i.attribLocations.baricentricPosition)}export{drawScene};