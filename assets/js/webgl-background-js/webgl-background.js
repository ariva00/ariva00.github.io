import{initBuffers}from"./init-buffers.js";import{drawScene}from"./draw-scene.js";import"https://cdnjs.cloudflare.com/ajax/libs/gl-matrix/2.8.1/gl-matrix-min.js";class background3D{#t=0;#r=mat4.create();#a=mat4.create();#i=mat4.create();#e=vec3.fromValues(.01*(Math.random()-.5),.01*(Math.random()-.5),.01*(Math.random()-.5));#o=0;#n=0;canvas=null;color=null;threshold=null;#s=0;#h=null;#c=null;setTheme=()=>{};#l="\n      attribute vec4 aVertexPosition;\n      attribute vec3 aBaricentricCoord;\n\n      uniform mat4 uModelViewMatrix;\n      uniform mat4 uProjectionMatrix;\n\n      varying lowp vec3 vBaricentricCoord;\n\n      void main(void) {\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        vBaricentricCoord = aBaricentricCoord;\n      }\n    ";#m="\n      varying lowp vec3 vBaricentricCoord;\n      uniform lowp vec4 uWireframeColor;\n      uniform lowp float uWireframeThreshold;\n\n      void main(void) {\n        gl_FragColor = float((vBaricentricCoord[0] < uWireframeThreshold) || (vBaricentricCoord[1] < uWireframeThreshold) || (vBaricentricCoord[2] < uWireframeThreshold))*uWireframeColor;\n      }\n    ";loadShader(t,r){const a=this.#h,i=a.createShader(t);return a.shaderSource(i,r),a.compileShader(i),a.getShaderParameter(i,a.COMPILE_STATUS)?i:(alert(a.getShaderInfoLog(i)),a.deleteShader(i),null)}initCanvas(){this.canvas.width=this.canvas.clientWidth,this.canvas.height=this.canvas.clientHeight,this.#h=this.canvas.getContext("webgl");const t=this.#h;null!==t&&(t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.enable(t.CULL_FACE))}initShaderProgram(){const t=this.#h,r=this.loadShader(t.VERTEX_SHADER,this.#l),a=this.loadShader(t.FRAGMENT_SHADER,this.#m);this.#c=t.createProgram(),t.attachShader(this.#c,r),t.attachShader(this.#c,a),t.linkProgram(this.#c),t.getProgramParameter(this.#c,t.LINK_STATUS)||(this.#c=null)}constructor(t,r,a=[1,1,1,.5],i=.01,e){this.canvas=r,e||(e=r),e.background3DObject=this,this.color=a,this.threshold=i,window.addEventListener("resize",(()=>{this.initCanvas(),this.initShaderProgram()})),this.initCanvas(),this.initShaderProgram();const o=this.#h;document.addEventListener("mousemove",(t=>{this.#o=t.clientX,this.#n=t.clientY;let r=this.canvas.clientWidth,a=this.canvas.clientHeight;this.#o=(this.#o-r/2)/(r/2),this.#n=(this.#n-a/2)/(a/2)}));const n={program:this.#c,attribLocations:{vertexPosition:o.getAttribLocation(this.#c,"aVertexPosition"),baricentricPosition:o.getAttribLocation(this.#c,"aBaricentricCoord")},uniformLocations:{projectionMatrix:o.getUniformLocation(this.#c,"uProjectionMatrix"),modelViewMatrix:o.getUniformLocation(this.#c,"uModelViewMatrix"),wireframeColor:o.getUniformLocation(this.#c,"uWireframeColor"),wireframeThreshold:o.getUniformLocation(this.#c,"uWireframeThreshold")}},s=initBuffers(o,t);this.#s=0,requestAnimationFrame((t=>this.#d(t,n,s)))}#d(t,r,a){t*=.001,this.#t=t-this.#s,this.#s=t,mat4.rotateY(this.#r,this.#r,this.#t*this.#o/2),vec3.rotateX(this.#e,this.#e,vec3.fromValues(0,0,0),this.#t*(Math.random()-.5)),vec3.rotateY(this.#e,this.#e,vec3.fromValues(0,0,0),this.#t*(Math.random()-.5)),vec3.rotateZ(this.#e,this.#e,vec3.fromValues(0,0,0),this.#t*(Math.random()-.5)),mat4.translate(this.#a,this.#a,this.#e),mat4.multiply(this.#i,this.#a,this.#r),Math.random()>.99&&(this.#e=vec3.fromValues(.01*(Math.random()-.5),.01*(Math.random()-.5),.01*(Math.random()-.5))),drawScene(this.#h,r,a,this.#i,this.color,this.threshold),requestAnimationFrame((t=>this.#d(t,r,a)))}}export{background3D};