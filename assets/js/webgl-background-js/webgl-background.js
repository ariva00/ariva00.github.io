function background3D(t,r){function o(t){deltaTime=(t*=.001)-l,l=t,mat4.rotateY(rotation,rotation,deltaTime*pos_x/2),vec3.rotateX(translation_vec,translation_vec,vec3.fromValues(0,0,0),deltaTime*(Math.random()-.5)),vec3.rotateY(translation_vec,translation_vec,vec3.fromValues(0,0,0),deltaTime*(Math.random()-.5)),vec3.rotateZ(translation_vec,translation_vec,vec3.fromValues(0,0,0),deltaTime*(Math.random()-.5)),mat4.translate(translation,translation,translation_vec),mat4.multiply(transform,translation,rotation),Math.random()>.99&&(translation_vec=vec3.fromValues(.01*(Math.random()-.5),.01*(Math.random()-.5),.01*(Math.random()-.5))),drawScene(e,i,c,transform,r),requestAnimationFrame(o)}const a=document.getElementById("webgl-background-js");a.style.opacity=r[3],a.width=a.clientWidth,a.height=a.clientHeight,document.addEventListener("mousemove",(t=>{pos_x=t.clientX,pos_y=t.clientY;let r=document.body.clientWidth,o=document.body.clientHeight;pos_x=(pos_x-r/2)/(r/2),pos_y=(pos_y-o/2)/(o/2)}));const e=a.getContext("webgl");if(null===e)return;e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT);const n=initShaderProgram(e,"\n    attribute vec4 aVertexPosition;\n    attribute vec3 aBaricentricCoord;\n\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    varying lowp vec3 vBaricentricCoord;\n\n    void main(void) {\n      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n      vBaricentricCoord = aBaricentricCoord;\n    }\n  ","\n    varying lowp vec3 vBaricentricCoord;\n    uniform lowp vec4 uWireframeColor;\n\n    void main(void) {\n      gl_FragColor = float((vBaricentricCoord[0] < 0.01) || (vBaricentricCoord[1] < 0.01) || (vBaricentricCoord[2] < 0.01))*uWireframeColor;\n    }\n  "),i={program:n,attribLocations:{vertexPosition:e.getAttribLocation(n,"aVertexPosition"),baricentricPosition:e.getAttribLocation(n,"aBaricentricCoord")},uniformLocations:{projectionMatrix:e.getUniformLocation(n,"uProjectionMatrix"),modelViewMatrix:e.getUniformLocation(n,"uModelViewMatrix"),wireframeColor:e.getUniformLocation(n,"uWireframeColor")}},c=initBuffers(e,t);let l=0;requestAnimationFrame(o)}function initShaderProgram(t,r,o){const a=loadShader(t,t.VERTEX_SHADER,r),e=loadShader(t,t.FRAGMENT_SHADER,o),n=t.createProgram();return t.attachShader(n,a),t.attachShader(n,e),t.linkProgram(n),t.getProgramParameter(n,t.LINK_STATUS)?n:null}function loadShader(t,r,o){const a=t.createShader(r);return t.shaderSource(a,o),t.compileShader(a),t.getShaderParameter(a,t.COMPILE_STATUS)?a:(alert(t.getShaderInfoLog(a)),t.deleteShader(a),null)}import{initBuffers}from"./init-buffers.js";import{drawScene}from"./draw-scene.js";import"https://cdnjs.cloudflare.com/ajax/libs/gl-matrix/2.8.1/gl-matrix-min.js";let deltaTime=0,rotating=!0,rotation=mat4.create(),translation=mat4.create(),transform=mat4.create(),translation_vec=vec3.fromValues(.01*(Math.random()-.5),.01*(Math.random()-.5),.01*(Math.random()-.5)),pos_x=0,pos_y=0;export{background3D};